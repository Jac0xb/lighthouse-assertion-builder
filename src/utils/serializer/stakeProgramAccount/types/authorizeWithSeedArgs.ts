/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { PublicKey } from '@metaplex-foundation/umi';
import {
  Serializer,
  publicKey as publicKeySerializer,
  string,
  struct,
} from '@metaplex-foundation/umi/serializers';
import {
  StakeAuthorize,
  StakeAuthorizeArgs,
  getStakeAuthorizeSerializer,
} from '.';

export type AuthorizeWithSeedArgs = {
  stakeAuthorize: StakeAuthorize;
  authoritySeed: string;
  authorityOwner: PublicKey;
};

export type AuthorizeWithSeedArgsArgs = {
  stakeAuthorize: StakeAuthorizeArgs;
  authoritySeed: string;
  authorityOwner: PublicKey;
};

export function getAuthorizeWithSeedArgsSerializer(): Serializer<
  AuthorizeWithSeedArgsArgs,
  AuthorizeWithSeedArgs
> {
  return struct<AuthorizeWithSeedArgs>(
    [
      ['stakeAuthorize', getStakeAuthorizeSerializer()],
      ['authoritySeed', string()],
      ['authorityOwner', publicKeySerializer()],
    ],
    { description: 'AuthorizeWithSeedArgs' }
  ) as Serializer<AuthorizeWithSeedArgsArgs, AuthorizeWithSeedArgs>;
}
