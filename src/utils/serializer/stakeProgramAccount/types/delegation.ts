/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { PublicKey } from '@metaplex-foundation/umi';
import {
  Serializer,
  f64,
  publicKey as publicKeySerializer,
  struct,
  u64,
} from '@metaplex-foundation/umi/serializers';

export type Delegation = {
  voterPubkey: PublicKey;
  stake: bigint;
  activationEpoch: bigint;
  deactivationEpoch: bigint;
  warmupCooldownRate: number;
};

export type DelegationArgs = {
  voterPubkey: PublicKey;
  stake: number | bigint;
  activationEpoch: number | bigint;
  deactivationEpoch: number | bigint;
  warmupCooldownRate: number;
};

export function getDelegationSerializer(): Serializer<
  DelegationArgs,
  Delegation
> {
  return struct<Delegation>(
    [
      ['voterPubkey', publicKeySerializer()],
      ['stake', u64()],
      ['activationEpoch', u64()],
      ['deactivationEpoch', u64()],
      ['warmupCooldownRate', f64()],
    ],
    { description: 'Delegation' }
  ) as Serializer<DelegationArgs, Delegation>;
}
